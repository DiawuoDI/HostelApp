// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
generator erd{
  provider = "prisma-erd-generator"
  output = "../prisma/erd.png"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model admin {
//   id        String   @id @default(uuid())
//   fullname  String
//   email     String   @unique
//   password  String
//   telephone String?
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model STUDENT {
  studentId   String       @id @default(uuid())
  profile     String
  fullname    String
  dateOfBirth String
  email       String?
  password    String
  gender      String
  level       Int
  telephone   String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  department  String?
  allocation  ALLOCATION?
  halll      HALL?      @relation(fields: [hallId], references: [id])
  hallId    String?
  roomRequest ROOM_REQUEST?
}

model ROOMS {
  id         String       @id @default(uuid())
  roomNumder Int          @unique
  status     status
  capacity   Int   @default(4)
  blockName  String
  hall     HALL?      @relation(fields: [hallId], references: [id])
  hallId   String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  allocation ALLOCATION[]
}

model ALLOCATION {
  id        String   @id @default(uuid())
  student   STUDENT? @relation(fields: [studentId], references: [studentId])
  studentId String   @unique
  rooms     ROOMS?   @relation(fields: [roomsId], references: [id])
  roomsId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ROOM_REQUEST {
  id        String   @id @default(uuid())
  student   STUDENT? @relation(fields: [studentId], references: [studentId])
  studentId String?  @unique
  status    options
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HALL {
  id       String    @id @default(uuid())
  name     String
  location String
  rooms    ROOMS[]
  student  STUDENT[]
}

enum status {
  Vacant
  Occupied
  Partially_Occupied
}

enum options {
  Rejected
  Approved
  Pending
}
